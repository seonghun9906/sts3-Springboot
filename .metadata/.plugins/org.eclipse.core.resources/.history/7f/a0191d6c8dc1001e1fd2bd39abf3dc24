Spring Legacy project
1. pom.xml 변경(각종 라이브러리 버전)
	java : 11
	Springframework-version: 5.3.20
	aspectj-version : 1.9.6
	slf4k-version : 2.0.9
	servlet-api -> javax.servlet-api(artifactId)
					version : 3.1.0
	maven-compiler-plugin configuration : 3.8.1
		source : 11
		target : 11
		
2. Proerties 변경
	 project Facets
	 - Dynamic Web Module : 4.0
	 - Java : 11
	 - Runtime : Apache Tomcat 체크
	 
3. 한글 인코딩 처리
	web.xml에 다음을 추가
	---------------------------------------------------------------------------------
	<filter> <!-- 한글 인코딩 처리 -->
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	---------------------------------------------------------------------------------
	
Lombok 설치 
1. lombok 다운로드 후 실행하여 개발도구(sts)에 설치
2. maven repository에서 해당 라이브러리를 복사하여 pom.xml에 추가

	---------------------------------------------------------------------------------
		<!-- Lombok -->
		<dependency> <!-- 롬복관련 dependency -->
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.30</version>
			<scope>provided</scope>
		</dependency>
	---------------------------------------------------------------------------------
	
3. lombok 활용
	1) getter와 setter 자동 생성
	2) log 출력용 라이브러리 - Slf4j(Log)
	
4. MVC 패턴
	1) controller(요청의 분류)
	2) service(요청에 해당하는 기능을 제공)
	3) dao(Data Access Object, DB와의 CRUD를 처리)
	4) dto(Data Transfer Object, data를 담아서 옮기는 역할을 담당)
		vo(Value Object)
		entity(DB 테이블과 매핑되어 사용하는 객체)
		
5. JSP(Java Server Page)
	JSP = HTML + Java
	페이지의 java 코드가 컴파일되어 하나의 클래스로 변환되어 실행.
	이 클래스를 servlet 클래슥라고 함.
	1) JSP 핵심요소
	  a. Directive(지시자)
	  JSP 페이지에 대한 설정 정보를 지정할 떄 사용.
	  1. page : 문서의 타입(인코딩 방식), 에러페이지 지정 등
	  2. taglib : jstl과 같은 태그 라이브러리를 지정할 때 사용.
	  3. include : 여러 페이지를 묶어서 하나의 페이지로 작성할 때 다른 페이지를 포함시키기 위한 지시자.
   EL(Expression Language)
   	표현언어. 백엔드에서 보내는 데이터를 출력하기 위한 형식을 제공.
   	형식)
   	#{표현식}
   	
   	Model 객체
   	Back-end -> Front-end로 데이터 전송에 사용하는 객체
   	
   	DTO와 Model의 관계
   	DTO는 박스, Model은 택배차
   	데이터 저장 메서드 : addAttribute
   	
	ModelAndView 객체
	데이터와 출력될 jsp 파일의 이름을 함께 지정하는 형태.
	Model은 대중교통, ModelAndView는 자가용.
	ModelAndView는 객체(인스턴스)를 생성하여 사용.
	데이터 저장 메서드 : addObject("key", value);
	view 지정 메서도, : setViewName("jsp파일명)
	
	Front-end -> back-end 데이터로 전송.
		parameter로 전송
	
	
	
   JSTL(Jsp Standard Tag Library)
    
   기본객체
   request, response, session(cookie) /(세션안에 request, response 가 왔다갔다 하면서 활동함 / 접속하고 접속끊을때까지 메모리의 할당 / 제약을 거는 공간)
   
   
   표기방식(case)
   Pascal case : 첫글자 대문자. 이후 추가된 단어의 첫글자 대문자.
   Camel case : 첫글자 소문자. 이후 추가된 단어의 첫글자 대만자.
   snake case : 전체를 소문자로 쓰고 단어들의 연결에 '_' 를 사용.
   Kebab case : 전체 소문자. 단어들의 연결에 '-' 사용.